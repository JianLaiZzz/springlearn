<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.6.RELEASE</version>
        <relativePath/>
    </parent>


    <groupId>com.example.zhw</groupId>
    <artifactId>springlearn</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>springlearn</name>
    <packaging>pom</packaging>
    <description>Demo project for Spring Boot</description>

    <properties>
        <java.version>1.8</java.version>
        <springfox-swagger2>2.7.0</springfox-swagger2>
        <springfox-swagger-ui>2.7.0</springfox-swagger-ui>
        <mysql-connector-java>8.0.19</mysql-connector-java>
        <junit-version>4.12</junit-version>
        <jackson-version>2.11.2</jackson-version>
        <google.guava.version>29.0-jre</google.guava.version>
        <mysql-connector>5.1.39</mysql-connector>
        <druid.vsersion>1.2.4</druid.vsersion>
        <pagehelper.version>1.3.0</pagehelper.version>
        <fastjson>1.2.83</fastjson>
        <arthas.version>3.5.0</arthas.version>
    </properties>

    <modules>
        <module>spring-mytatis</module>
        <module>springsource</module>
        <module>spring-shardingsphere</module>
        <module>spring-elasticsearch</module>
        <module>common</module>
        <!--        <module>alibaba</module>-->
    </modules>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>


        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure</artifactId>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${springfox-swagger2}</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${springfox-swagger-ui}</version>
        </dependency>


    </dependencies>

    <!--    限制子模块版本-->
    <dependencyManagement>


        <dependencies>

            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${pagehelper.version}</version>
            </dependency>


            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${springfox-swagger2}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${springfox-swagger-ui}</version>
            </dependency>


            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit-version}</version>
            </dependency>


            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson-version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${google.guava.version}</version>
            </dependency>

            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connector-java}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.vsersion}</version>
            </dependency>

            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>3.4.2</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!--    如果单独使用springboot项目没有使用spring cloud的注册中心，网关等服务时，各个服务之间的依赖是通过引入jar包的方式。-->

    <!--    比如项目中经常会新建一个common项目，然后给其它项目使用比如order-service依赖于common。-->

    <!--    首先我们项目都是正常搭建的，然后再使用打包的时候开始就报找不到common包中的服务-->

    <!--    注意！注意！这里发现一个坑，项目中遇到过这里记录下希望后面不要再犯这样的错误了。-->

    <!--    Common打包出来的应该是不可执行的jar包，所以不要在Common的pom中定义spring-boot-maven-plugin插件，-->
    <!--    因为这个SpringBoot插件会在Maven的package后进行二次打包，目的为了生成可执行jar包，如果Common中定义了这个插件，-->
    <!--    会报错提示没有找到main函数。这时你就可以去打包order-service项目了，当然打包的时候可能还是不行，这里还有一个小坑，-->
    <!--    如果还是不能进行打包的话，那么就install一下root项目，也就是总目录下的pom文件对应的install操作，这样再打包order-service项目基本上就没有问题了。-->


</project>
