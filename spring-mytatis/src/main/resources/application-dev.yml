server:
  port: 8080


spring:
  #  redis:
  #    password: "*octserver*123"
  #    timeout: 5000
  #    sentinel:
  #      master: mymaster
  #      # 哨兵的IP:Port列表
  #      nodes: 172.18.125.58:26379,172.18.125.58:26380,172.18.125.57:26381
  #    lettuce: # 或lettuce
  #      pool:
  #        max-active: 8
  #        max-wait: -1
  #        max-idle: 8
  #        min-idle: 0
  datasource:
    #url: jdbc:mysql://120.78.132.139:8066/learn?useUnicode=true&characterEncoding=utf8
    url: jdbc:mysql://120.78.132.139:3306/learn?useUnicode=true&characterEncoding=utf8
    name: zhw
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    #druid 数据源专有配置 下面的连接池属性不会自动装配，使用下面的属性需要在配置类中配置数据源
    druid:
      initialSize: 5
      minIdle: 5
      maxActive: 20
      maxWait: 60000
      timeBetweenEvictionRunsMillis: 60000
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      poolPreparedStatements: false
      #配置监控统计拦截的filters，stat:监控统计、log4j：日志记录、wall：防御sql注入
      #如果运行时报错  java.lang.ClassNotFoundException: org.apache.log4j.Priority
      #则导入 log4j 依赖即可，Maven 地址： https://mvnrepository.com/artifact/log4j/log4j
      filters: stat,wall,slf4j,config
      #合并多个DruidDataSource的监控数据
      useGlobalDataSourceStat: true
      #通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 配置DruidStatFilter
      filter:
        # 开启druiddatasource的状态监控
        stat:
          enabled: true
          db-type: mysql
          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中
          log-slow-sql: true
          slow-sql-millis: 2000
        # 日志监控，使用slf4j 进行日志输出
      slf4j:
        enabled: true
        statement-log-error-enabled: true
        statement-create-after-log-enabled: false
        statement-close-after-log-enabled: false
        result-set-open-after-log-enabled: false
        result-set-close-after-log-enabled: false
      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########
      web-stat-filter:
        # 启动 StatFilter
        enabled: true
        # 过滤所有url
        url-pattern: /*
        # 排除一些不必要的url
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
        # 开启session统计功能
        session-stat-enable: true
        # session的最大个数,默认100
        session-stat-max-count: 1000
      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########
      stat-view-servlet:
        # 启用StatViewServlet
        enabled: true
        # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html
        url-pattern: /druid/*
        # 不允许清空统计数据,重新计算
        reset-enable: false
        # 配置监控页面访问密码
        login-username: root
        login-password: 123456
        # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问
        allow: 127.0.0.1
        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝
        deny:
  security:
    user:
      name: zhw
      password: 123456
  profiles:
    include:




management:
  endpoints:
    web:
      exposure:
        include: "*"
#logging:
#  file:
#    path: D:\logs\springlearn
#  config: classpath:logback-spring.xml 可以不配置默认读取



mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
