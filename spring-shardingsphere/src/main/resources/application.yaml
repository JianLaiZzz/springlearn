spring:
  # ShardingSphere 配置项
  shardingsphere:
    datasource:
      # 所有数据源的名字
      names: ds-orders-0, ds-orders-1
      # 订单 orders 数据源配置 00
      ds-orders-0:
        # 使用 Hikari 数据库连接池
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.jdbc.Driver
        jdbc-url: jdbc:mysql://120.78.132.139:3306/sharding?useUnicode=true&characterEncoding=utf8
        username: root
        password: 123456
      # 订单 orders 数据源配置 01
      ds-orders-1:
        # 使用 Hikari 数据库连接池
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.jdbc.Driver
        jdbc-url: jdbc:mysql://120.78.132.139:3306/sharding-slave?useUnicode=true&characterEncoding=utf8
        username: root
        password: 123456
    # 分片规则
    sharding:
      tables:
        # orders 表配置
        orders:
          # 映射到 ds-orders-0 和 ds-orders-1 数据源的 orders 表们
          actualDataNodes: ds-orders-0.orders_$->{[0,2,4,6]}, ds-orders-1.orders_$->{[1,3,5,7]}
          # 主键生成策略
          key-generator:
            column: id
            type: SNOWFLAKE
          database-strategy:
            inline:
              algorithm-expression: ds-orders-$->{user_id % 2}
              sharding-column: user_id
          table-strategy:
            inline:
              algorithm-expression: orders_$->{user_id % 8}
              sharding-column: user_id
        # order_config 表配置
        order_config:
          # 仅映射到 ds-orders-0 数据源的 order_config 表
          actualDataNodes: ds-orders-0.order_config
    # 拓展属性配置
    props:
      sql:
        # 打印 SQL
        show: true














