<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.example.zhw</groupId>
        <artifactId>springlearn</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>

    <groupId>com.example.zhw</groupId>
    <artifactId>springsource</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>


    <properties>
        <mybatis-spring-boot>2.1.2</mybatis-spring-boot>
        <mysql-connector>8.0.19</mysql-connector>
        <junit-version>4.12</junit-version>
    </properties>


    <dependencies>


        <dependency>
            <groupId>com.example.zhw</groupId>
            <artifactId>common</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>jackson-databind</artifactId>
                    <groupId>com.fasterxml.jackson.core</groupId>
                </exclusion>
            </exclusions>
        </dependency>


        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-boot-starter</artifactId>
            <version>2.3</version>
            <exclusions>
                <exclusion>
                    <artifactId>jsqlparser</artifactId>
                    <groupId>com.github.jsqlparser</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>mybatis</artifactId>
                    <groupId>org.mybatis</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>mybatis-spring</artifactId>
                    <groupId>org.mybatis</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-all</artifactId>
            <version>5.0.0.Alpha2</version>
        </dependency>


        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>3.9.1</version>
        </dependency>

        <dependency>

            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-chrome-driver</artifactId>
            <version>3.9.1</version>
        </dependency>

        <!--        <dependency>-->
        <!--            <groupId>org.springframework.boot</groupId>-->
        <!--            <artifactId>spring-boot-starter-data-redis</artifactId>-->
        <!--            <exclusions>-->
        <!--                <exclusion>-->
        <!--                    <artifactId>lettuce-core</artifactId>-->
        <!--                    <groupId>io.lettuce</groupId>-->
        <!--                </exclusion>-->
        <!--            </exclusions>-->
        <!--        </dependency>-->


        <dependency>

            <groupId>org.seleniumhq.selenium</groupId>

            <artifactId>selenium-java</artifactId>

        </dependency>


        <dependency>

            <groupId>org.seleniumhq.selenium</groupId>

            <artifactId>selenium-chrome-driver</artifactId>

        </dependency>

        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>htmlunit-driver</artifactId>
        </dependency>

        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-remote-driver</artifactId>
        </dependency>
        <dependency>

            <groupId>org.apache.commons</groupId>
            <artifactId>commons-exec</artifactId>
            <version>1.3</version>
        </dependency>

    </dependencies>


    <!--    <build>-->
    <!--        &lt;!&ndash; 打包输出的根目录 &ndash;&gt;-->
    <!--        &lt;!&ndash; <directory>target/${project.version}</directory> &ndash;&gt;-->
    <!--        <plugins>-->
    <!--            <plugin>-->
    <!--                <groupId>org.springframework.boot</groupId>-->
    <!--                <artifactId>spring-boot-maven-plugin</artifactId>-->
    <!--                <configuration>-->
    <!--                    &lt;!&ndash; 剔除spring-boot打包的org和BOOT-INF文件夹(用于子模块打包) &ndash;&gt;-->
    <!--                    <skip>true</skip>-->
    <!--                    &lt;!&ndash; 指定该jar包启动时的主类[建议] &ndash;&gt;-->
    <!--                    <mainClass>com.example.zhw.springsource.SpringsourceApplication</mainClass>-->
    <!--                    <layout>ZIP</layout>-->
    <!--                    <includes>-->
    <!--                        &lt;!&ndash; 排除第三方依赖jar(只保留本项目的jar) &ndash;&gt;-->
    <!--                        <include>-->
    <!--                            <groupId>${project.groupId}</groupId>-->
    <!--                            <artifactId>${project.artifactId}</artifactId>-->
    <!--                        </include>-->
    <!--                    </includes>-->
    <!--                </configuration>-->
    <!--            </plugin>-->


    <!--            &lt;!&ndash; 打源码包 &ndash;&gt;-->
    <!--            <plugin>-->
    <!--                <groupId>org.apache.maven.plugins</groupId>-->
    <!--                <artifactId>maven-source-plugin</artifactId>-->
    <!--                <configuration>-->
    <!--                    <attach>true</attach>-->
    <!--                </configuration>-->
    <!--                <executions>-->
    <!--                    <execution>-->
    <!--                        <id>attach-sources</id>-->
    <!--                        <phase>compile</phase>-->
    <!--                        <goals>-->
    <!--                            <goal>jar-no-fork</goal>-->
    <!--                        </goals>-->
    <!--                    </execution>-->
    <!--                </executions>-->
    <!--            </plugin>-->
    <!--            &lt;!&ndash; 把项目依赖的第三方包打包在target/lib下 &ndash;&gt;-->
    <!--            <plugin>-->
    <!--                <groupId>org.apache.maven.plugins</groupId>-->
    <!--                <artifactId>maven-dependency-plugin</artifactId>-->
    <!--                <executions>-->
    <!--                    <execution>-->
    <!--                        <id>copy-dependencies</id>-->
    <!--                        <phase>package</phase>-->
    <!--                        <goals>-->
    <!--                            <goal>copy-dependencies</goal>-->
    <!--                        </goals>-->
    <!--                        <configuration>-->
    <!--                            <outputDirectory>${project.build.directory}/lib</outputDirectory>-->
    <!--                            <excludeTransitive>false</excludeTransitive>-->
    <!--                            <stripVersion>false</stripVersion>-->
    <!--                            <includeScope>runtime</includeScope>-->
    <!--                        </configuration>-->
    <!--                    </execution>-->
    <!--                </executions>-->
    <!--            </plugin>-->
    <!--        </plugins>-->

    <!--        <resources>-->
    <!--            &lt;!&ndash; 打包src/main/java下的xml文件 &ndash;&gt;-->
    <!--            <resource>-->
    <!--                <directory>src/main/java</directory>-->
    <!--                <includes>-->
    <!--                    <include>**/*.xml</include>-->
    <!--                </includes>-->
    <!--            </resource>-->
    <!--            &lt;!&ndash; 排除resources下的配置文件 &ndash;&gt;-->
    <!--            <resource>-->
    <!--                <filtering>true</filtering>-->
    <!--                <directory>src/main/resources</directory>-->
    <!--                <excludes>-->
    <!--                    <exclude>static/**</exclude>-->
    <!--                    <exclude>templates/**</exclude>-->
    <!--                    <exclude>*.yml</exclude>-->
    <!--                    <exclude>*.properties</exclude>-->
    <!--                    <exclude>*.xml</exclude>-->
    <!--                    <exclude>*.txt</exclude>-->
    <!--                </excludes>-->
    <!--                <targetPath>BOOT-INF/classes/</targetPath>-->
    <!--            </resource>-->
    <!--            &lt;!&ndash; 打包lib下的jar包 &ndash;&gt;-->
    <!--            <resource>-->
    <!--                <directory>lib</directory>-->
    <!--                <targetPath>BOOT-INF/lib/</targetPath>-->
    <!--                <includes>-->
    <!--                    <include>**/*.jar</include>-->
    <!--                </includes>-->
    <!--            </resource>-->
    <!--        </resources>-->
    <!--    </build>-->


    <build>


        <!--        Spring Boot 的配置文件加载优先级如下：-->

        <!--       1 当前目录下的config子目录-->
        <!--       2 当前目录-->
        <!--       3 classpath下的config目录-->
        <!--       4 classpath根路径-->

        <!--        优先级自上而下递减-->
        <!--        -->


        <plugins>
            <plugin>
                <!--打包时去除第三方依赖-->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <layout>ZIP</layout>
                    <includes>
                        <include>
                            <groupId>non-exists</groupId>
                            <artifactId>non-exists</artifactId>
                        </include>
                    </includes>
                </configuration>
            </plugin>
            <!--拷贝第三方依赖文件到指定目录-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <!--target/lib是依赖jar包的输出目录，根据自己喜好配置-->
                            <outputDirectory>target/lib</outputDirectory>
                            <excludeTransitive>false</excludeTransitive>
                            <stripVersion>false</stripVersion>
                            <includeScope>runtime</includeScope>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>

<!--        打包时会把资源文件剔除，可以在jar包同级目录建config文件夹，把资源文件拷贝进去-->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <excludes>
                    <exclude>**/*.properties</exclude>
                    <exclude>**/*.yml</exclude>
                </excludes>
            </resource>
        </resources>

    </build>


</project>
